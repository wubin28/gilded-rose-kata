{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls *.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi\n\njava -cp $CLASSES TexttestFixture\n","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n.>>>In IllegalArgumentException.\n.>>>In IllegalArgumentException.\nE.>>>In Aged Brie.\n.>>>In IllegalArgumentException.\n.>>>In Sulfuras\n.>>>In IllegalArgumentException.\nE.>>>In IllegalArgumentException.\nE.>>>In Aged Brie.\n.>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n.>>>In IllegalArgumentException.\nE.>>>In IllegalArgumentException.\n.>>>In IllegalArgumentException.\nE.>>>In Aged Brie.\n\nTime: 0.061\nThere were 5 failures:\n1) quality_of_backstage_passes_should_increase_up_to_50(GildedRoseTest)\njava.lang.AssertionError: expected:<50> but was:<49>\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.failNotEquals(Assert.java:646)\n\tat org.junit.Assert.assertEquals(Assert.java:127)\n\tat org.junit.Assert.assertEquals(Assert.java:471)\n\tat org.junit.Assert.assertEquals(Assert.java:455)\n\tat GildedRoseTest.quality_of_backstage_passes_should_increase_up_to_50(GildedRoseTest.java:115)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:269)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:151)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:130)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:111)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:92)\n\tat org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:38)\n2) quality_of_backstage_passes_should_increase_by_3_if_sellIn_is_more_than_0_and_less_than_6(GildedRoseTest)\njava.lang.AssertionError: expected:<23> but was:<19>\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.failNotEquals(Assert.java:646)\n\tat org.junit.Assert.assertEquals(Assert.java:127)\n\tat org.junit.Assert.assertEquals(Assert.java:471)\n\tat org.junit.Assert.assertEquals(Assert.java:455)\n\tat GildedRoseTest.quality_of_backstage_passes_should_increase_by_3_if_sellIn_is_more_than_0_and_less_than_6(GildedRoseTest.java:101)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:269)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:151)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:130)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:111)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:92)\n\tat org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:38)\n3) quality_of_backstage_passes_should_increase_by_2_if_sellIn_is_more_than_5_and_less_than_11(GildedRoseTest)\njava.lang.AssertionError: expected:<22> but was:<19>\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.failNotEquals(Assert.java:646)\n\tat org.junit.Assert.assertEquals(Assert.java:127)\n\tat org.junit.Assert.assertEquals(Assert.java:471)\n\tat org.junit.Assert.assertEquals(Assert.java:455)\n\tat GildedRoseTest.quality_of_backstage_passes_should_increase_by_2_if_sellIn_is_more_than_5_and_less_than_11(GildedRoseTest.java:87)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:269)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:151)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:130)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:111)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:92)\n\tat org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:38)\n4) quality_of_backstage_passes_should_increase_by_1_if_sellIn_is_more_than_10(GildedRoseTest)\njava.lang.AssertionError: expected:<21> but was:<19>\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.failNotEquals(Assert.java:646)\n\tat org.junit.Assert.assertEquals(Assert.java:127)\n\tat org.junit.Assert.assertEquals(Assert.java:471)\n\tat org.junit.Assert.assertEquals(Assert.java:455)\n\tat GildedRoseTest.quality_of_backstage_passes_should_increase_by_1_if_sellIn_is_more_than_10(GildedRoseTest.java:73)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:269)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:151)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:130)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:111)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:92)\n\tat org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:38)\n5) quality_of_backstage_passes_should_degrade_to_be_0_if_sellIn_is_less_than_or_equal_to_0(GildedRoseTest)\njava.lang.AssertionError: expected:<0> but was:<18>\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.failNotEquals(Assert.java:646)\n\tat org.junit.Assert.assertEquals(Assert.java:127)\n\tat org.junit.Assert.assertEquals(Assert.java:471)\n\tat org.junit.Assert.assertEquals(Assert.java:455)\n\tat GildedRoseTest.quality_of_backstage_passes_should_degrade_to_be_0_if_sellIn_is_less_than_or_equal_to_0(GildedRoseTest.java:178)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:269)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:237)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:61)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:235)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:51)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:228)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:306)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:151)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:130)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:111)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:92)\n\tat org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:38)\n\nFAILURES!!!\nTests run: 13,  Failures: 5\n\nOMGHAI!\n-------- day 0 --------\nname, sellIn, quality\n+5 Dexterity Vest, 10, 20\nAged Brie, 2, 0\nElixir of the Mongoose, 5, 7\nSulfuras, Hand of Ragnaros, 0, 80\nSulfuras, Hand of Ragnaros, -1, 80\nBackstage passes to a TAFKAL80ETC concert, 15, 20\nBackstage passes to a TAFKAL80ETC concert, 10, 49\nBackstage passes to a TAFKAL80ETC concert, 5, 49\nConjured Mana Cake, 3, 6\n\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n-------- day 1 --------\nname, sellIn, quality\n+5 Dexterity Vest, 9, 19\nAged Brie, 1, 0\nElixir of the Mongoose, 4, 6\nSulfuras, Hand of Ragnaros, -1, 78\nSulfuras, Hand of Ragnaros, -2, 78\nBackstage passes to a TAFKAL80ETC concert, 14, 19\nBackstage passes to a TAFKAL80ETC concert, 9, 48\nBackstage passes to a TAFKAL80ETC concert, 4, 48\nConjured Mana Cake, 2, 5\n\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n>>>In IllegalArgumentException.\n","instructions":"\nThis is an instructor-led exercise with no written instructions.\nYour instructor will explain the exercise.\n","GildedRoseTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class GildedRoseTest {\n\n    @Test\n    public void quality_of_normal_item_should_degrade_at_the_end_of_each_day() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"+5 Dexterity Vest\", 10, 20) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(19, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_normal_item_should_not_degrade_to_be_negative() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"+5 Dexterity Vest\", 10, 0) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(0, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_aged_brie_should_increase_at_the_end_of_each_day() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"AgedBrie\", 10, 20) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(21, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_aged_brie_should_increase_up_to_50() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"AgedBrie\", 10, 50) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(50, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_backstage_passes_should_increase_by_1_if_sellIn_is_more_than_10() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"BackstagePassesToATAFKAL80ETCConcert\", 11, 20) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(21, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_backstage_passes_should_increase_by_2_if_sellIn_is_more_than_5_and_less_than_11() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"BackstagePassesToATAFKAL80ETCConcert\", 6, 20) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(22, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_backstage_passes_should_increase_by_3_if_sellIn_is_more_than_0_and_less_than_6() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"BackstagePassesToATAFKAL80ETCConcert\", 5, 20) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(23, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_backstage_passes_should_increase_up_to_50() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"BackstagePassesToATAFKAL80ETCConcert\", 5, 50) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(50, items[0].quality);\n    }\n\n    @Test\n    public void sellIn_of_sulfuras_should_never_be_changed() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"SulfurasHandOfRagnaros\", 0, 80) };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(80, items[0].quality);\n    }\n\n    @Test\n    public void sellIn_of_item_other_than_sulfuras_should_degrade_at_the_end_of_each_day() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"Aged Brie\", 0, 20),\n            new Item(\"BackstagePassesToATAFKAL80ETCConcert\", 10, 20),\n            new Item(\"+5 Dexterity Vest\", -1, 50),\n            };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(-1, items[0].sellIn);\n        assertEquals(9, items[1].sellIn);\n        assertEquals(-2, items[2].sellIn);\n    }\n\n    @Test\n    public void quality_of_normal_item_should_degrade_by_2_if_sellIn_is_less_than_or_equal_to_0() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"+5 Dexterity Vest\", 0, 20)\n            };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(18, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_backstage_passes_should_degrade_to_be_0_if_sellIn_is_less_than_or_equal_to_0() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"BackstagePassesToATAFKAL80ETCConcert\", 0, 20)\n            };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(0, items[0].quality);\n    }\n\n    @Test\n    public void quality_of_aged_brie_should_increase_by_2_if_sellIn_is_less_than_or_equal_to_0() {\n        // Given\n        Item[] items = new Item[] {\n            new Item(\"AgedBrie\", 0, 20)\n            };\n        GildedRose app = new GildedRose(items);\n\n        // When\n        app.updateQuality();\n\n        // Then\n        assertEquals(22, items[0].quality);\n    }\n\n}\n","GildedRose.java":"class GildedRose {\n    Item[] items;\n\n    public GildedRose(Item[] items) {\n        this.items = items;\n    }\n\n    public void updateQuality() {\n        for (int i = 0; i < items.length; i++) {\n            try {\n                QualityAndSellInCalculator.valueOf(items[i].name).updateQualityAndSellIn(items[i]);\n            } catch (IllegalArgumentException illegalArgumentException) {\n\n                System.out.println(\">>>In IllegalArgumentException.\");\n\n\n                if (items[i].quality > 0) {\n                    items[i].quality -= 1;\n                }\n\n                items[i].sellIn -= 1;\n\n                if (items[i].sellIn < 0) {\n                    if (items[i].quality > 0) {\n                        items[i].quality -= 1;\n                    }\n                }\n            }\n\n        }\n    }\n}\n","Item.java":"public class Item {\n\n    public String name;\n\n    public int sellIn;\n\n    public int quality;\n\n    public Item(String name, int sellIn, int quality) {\n        this.name = name;\n        this.sellIn = sellIn;\n        this.quality = quality;\n    }\n\n    public String toString() {\n        return this.name + \", \" + this.sellIn + \", \" + this.quality;\n    }\n}\n","TexttestFixture.java":"public class TexttestFixture {\n    public static void main(String[] args) {\n        System.out.println(\"OMGHAI!\");\n\n        Item[] items = new Item[] {\n                new Item(\"+5 Dexterity Vest\", 10, 20), //\n                new Item(\"Aged Brie\", 2, 0), //\n                new Item(\"Elixir of the Mongoose\", 5, 7), //\n                new Item(\"Sulfuras, Hand of Ragnaros\", 0, 80), //\n                new Item(\"Sulfuras, Hand of Ragnaros\", -1, 80),\n                new Item(\"Backstage passes to a TAFKAL80ETC concert\", 15, 20),\n                new Item(\"Backstage passes to a TAFKAL80ETC concert\", 10, 49),\n                new Item(\"Backstage passes to a TAFKAL80ETC concert\", 5, 49),\n                // this conjured item does not work properly yet\n                new Item(\"Conjured Mana Cake\", 3, 6) };\n\n        GildedRose app = new GildedRose(items);\n\n        int days = 2;\n        if (args.length > 0) {\n            days = Integer.parseInt(args[0]) + 1;\n        }\n\n        for (int i = 0; i < days; i++) {\n            System.out.println(\"-------- day \" + i + \" --------\");\n            System.out.println(\"name, sellIn, quality\");\n            for (Item item : items) {\n                System.out.println(item);\n            }\n            System.out.println();\n            app.updateQuality();\n        }\n    }\n\n}\n","QualityAndSellInCalculator.java":"public enum QualityAndSellInCalculator {\n    AgedBrie {\n        @Override\n        public void updateQualityAndSellIn(Item item) {\n            System.out.println(\">>>In Aged Brie.\");\n            if (item.quality < 50) item.quality += 1;\n\n            item.sellIn -= 1;\n\n            if (item.sellIn < 0 && item.quality < 50) {\n                item.quality += 1;\n            }\n        }\n    },\n    SulfurasHandOfRagnaros {\n        @Override\n        public void updateQualityAndSellIn(Item item) {\n            System.out.println(\">>>In Sulfuras\");\n        }\n    },\n    BackStagePassesToATAFKAL80Concert {\n        @Override\n        public void updateQualityAndSellIn(Item item) {\n            System.out.println(\">>>In Backstage\");\n            if (item.quality < 50) {\n                item.quality += 1;\n\n                if (item.sellIn < 11) {\n                    if (item.quality < 50) {\n                        item.quality += 1;\n                    }\n                }\n\n                if (item.sellIn < 6) {\n                    if (item.quality < 50) {\n                        item.quality += 1;\n                    }\n                }\n            }\n\n            item.sellIn -= 1;\n\n            if (item.sellIn < 0) {\n                item.quality = 0;\n            }\n\n        }\n    }\n    ;\n\n    public abstract void updateQualityAndSellIn(Item item);\n\n}"}